version: 2.1
jobs:
  test:
    working_directory: ~/neoscan-2
    docker:
      - image: circleci/node:14.16.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install dependencies
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: fetch git commit hash
          command: echo REACT_APP_LAST_COMMIT=$(git log --pretty=format:%h -n 1 --abbrev=7) > .env
      - run:
          name: type check
          command: npm run ts-build
      - run:
          name: lint
          command: npm run ci-lint
      - run:
          name: test
          command: npm run test

  deploy-develop:
      docker:
        - image: circleci/node:14.16.0
      steps:
        - checkout
        - restore_cache:
            key: dependency-cache-{{ checksum "package-lock.json" }}
        - run:
            name: install dependencies
            command: npm install
        - save_cache: # special step to save the dependency cache
            key: dependency-cache-{{ checksum "package-lock.json" }}
            paths:
              - ./node_modules
        - run:
            name: fetch git commit hash
            command: echo REACT_APP_LAST_COMMIT=$(git log --pretty=format:%h -n 1 --abbrev=7) > .env
        - run:
            name: build
            command: npm run build
        - run:
            name: install aws cli
            command: |
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install
        - run:
            name: deploy
            command: npm run deploy:develop

  deploy-stage:
    docker:
      - image: circleci/node:14.16.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install dependencies
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: fetch git commit hash
          command: echo REACT_APP_LAST_COMMIT=$(git log --pretty=format:%h -n 1 --abbrev=7) > .env
      - run:
          name: build
          command: npm run build
      - run:
          name: install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: deploy
          command: npm run deploy:stage

  deploy-production:
    docker:
      - image: circleci/node:14.16.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install dependencies
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: fetch git commit hash
          command: echo REACT_APP_LAST_COMMIT=$(git log --pretty=format:%h -n 1 --abbrev=7) > .env
      - run:
          name: build
          command: npm run build
      - run:
          name: install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: deploy
          command: npm run deploy

workflows:
  version: 2
  build:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - deploy-develop:
          context: aws
          requires:
            - test
          filters:
            tags:
              only:
                - dev
            branches:
              ignore: /.*/
      - deploy-stage:
          context: aws
          requires:
            - test
          filters:
            branches:
              only:
                - develop
      - approve-release:
          type: approval
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-production:
          context: aws
          requires:
            - approve-release
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
